// Create an array with five decimal numbers, and use it for the following:
//
// Create a function that finds the highest number.
//
// highestNumber([1,4,2]) should return 4
// highestNumber([-1,-2,-4]) should return -1
// Hint: create a variable called max, and assign it a reasonable start value; then use forEach: if an element is higher than max, change max.

var max = 0;

function maxNumber(array) {
  max = Math.min.apply(null, array)
  // console.log(max);
  array.forEach(function(e) {
    if (e >= max) {
      max = e;
      console.log(max)
      return max
    }
  }) // end of forEach
} // end of maxNumber


// Create a function that finds the smallest number (the closest to zero).
//
// smallestNumber([1,4,2]) should return 1
// smallestNumber([0.1,0.01,0.001]) should return 0.001
// smallestNumber([-1,-2,-4]) should return -1
// smallestNumber([0.1,-0.001]) should return -0.001

var max;
var min;

function maxMin(array) {
  min = Math.min.apply(null, array)
  max = Math.max.apply(null, array)
  console.log("min: " + min);
  console.log("max: " + max);

// loop for negative numbers
  array.forEach(function(e) {
    if (e <= max && e > 0) {
      max = e;
      console.log("Loop Max: " + max)
      return max
    } // end of if
  }) // end of forEach


// loop for positive numbers
  array.forEach(function(e) {
    if (e >= min && e < 0) {
      min = e;
      min = Math.abs(min)
      console.log("Loop Min: " + min)
    } // end of if
  }) // end of forEach
  if (min > max) {
    console.log(max);
  } else {
    console.log(min);
  }

}

// Create a function that calculate the sum.
//
// sum([1,2,3]) should return 6
// sum([]) should return 0
arr = [2, 15, 40, 55, -30]

function sum (array) {

  function add(a, b) {
    return a + b;
  }
  var sum = array.reduce(add, 0);
  console.log(sum);
}

// Arrays of Strings
//
// Create an array with your siblings names, and an array with your parents names.
//
// Sort your siblings names in alphabetical order.
//
// Sort your parents names in reverse alphabetical order.
//
// Sort all the names in alphabetical order.
//
// Hint: Combine the arrays into a single array.
// Sort all the names in reverse alphabetical order.
//
// Create a function that determines if a given name is amongst the names.

var siblingsNames = ["John", "Larry", "Lilly", "Amanda", "Tim"];
var parentsNames = ["Bob", "Sharon", "Chris", "Gary", "Solange"];

function sortNames () {
  var choice = prompt ("What sort do you want:\n1: For siblingsNames\n2: For parentsNames in reverse\n3: For all names in reverse\n5: For search")
  if (choice === "1"){
    var sorting = siblingsNames.sort();
    console.log(sorting);
  } // end of if 1
  else if (choice === "2") {
    var sorting = parentsNames.reverse();
    console.log(sorting);
  } // end of if 2
  else if (choice === "3") {
    var combine = siblingsNames.concat(parentsNames)
    var sorting = combine.sort();
    console.log(sorting);
  } // end of if 3
  else {
    var searchName = prompt("What name are you looking for?");
    var combine = siblingsNames.concat(parentsNames);
    var index = combine.indexOf(searchName)
    if (index === -1) {
      alert(searchName + " is not in the list. Sorry")
    } else {
      alert(searchName + " is in the list. YAAAAAAAAAA!!!")
    } // end of 4
} // end of function


// Create a function that take an array and a function, and returns a new array with only the elements for which the function returns true.
//
// filterArray([5,6,7], function(x) { return x>=6; }) should return [6,7]
// Hint: create a new array and use forEach on the given array, only appending the element if the function returns true

arr = [1, 3, 5, 6, 9, 11, 67]

// function x () {
//     if (i >= 10) {
//       var a = newArr.push(i);
//       console.log(a);
//     }
// }

function beta (arr, function(x){ return x>=6; }){
  arr.forEach(function(i){
    var newArr = [];
  })
}

// For to While
//
// Re-write the following as a while loop:
//
// for (var i=0; i<10; i++) { console.log(i); }

var x = 0;
while(x < 10) {
  console.log(x);
  x++;
}

// Re-write the following as a for loop:
//
// var a = 10;
// while (a > 0) {
//   console.log(a);
//   a = a - 1;
// }

for (var i = 10; i > 0; i--) {
  console.log(i);
}



// Write a Javascript function mergeArray that merges two arrays and removes all duplicate elements.
//
// mergeArray([1, 2, 3], [2, 30, 1]) should return [1, 2, 3, 30]
//
// Order does not matter.
var arr1 = [1, 2, 3];
var arr2 = [2, 30, 1];

var merge = arr1.concat(arr2)

function search () {
  for (var i = 0; i < merge.length; i++)
    var name = merge[i];
    var indexName  = merge.indexOf(name)
    console.log(indexName);
    if (name != -1) {
      merge.splice(i, 1);
    } else {
      console.log(i);
    }
}


function mergeArray(arr1, arr2) {


}

// Clean Function
//
// Write a Javascript function to filter false, null, 0 and blank values from an array.
//
// filterArrayValues([58, '', 'abcd', true, null, false, 0]) should return [58, "abcd", true]

var array = [58, "", "abcd", true, null, false, 0];

function filterContent (value) {
  return value != 0 && value !== null;
}
console.log(array.filter(filterContent));

// Pre-fill
// Write a Javascript function called fillArray to create a specified number of elements with a pre-filled numeric values in an array.
// fillArray(6, 0) should return [0, 0, 0, 0, 0, 0]
// fillArray(4, 11) should return [11, 11, 11, 11]

function fillArray(num1, num2) {
  var array = [""];
  
